{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\portafolio\\\\tienda-nona\\\\client\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Isotope from 'isotope-layout';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer, Row, Col } from './collection.styles';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  console.log(collection);\n  const {\n    title,\n    items\n  } = collection; // store the isotope object in one state\n\n  const [isotope, setIsotope] = React.useState(null); // store the filter keyword in another state\n\n  const [filterKey, setFilterKey] = React.useState(\"*\");\n  const [sortKey, setSortKey] = React.useState(\"number\"); // initialize an Isotope object with configs\n\n  React.useEffect(() => {\n    setIsotope(new Isotope(\".filter-container\", {\n      itemSelector: \".filter-item\",\n      layoutMode: \"fitRows\",\n      getSortData: {\n        number: '.number parseInt',\n        name: '.name'\n      }\n    }));\n  }, []);\n  React.useEffect(() => {\n    if (isotope) {\n      filterKey === \"*\" ? isotope.arrange({\n        filter: `*`,\n        sortBy: sortKey\n      }) : isotope.arrange({\n        filter: `.${filterKey}`,\n        sortBy: sortKey\n      });\n    }\n  }, [isotope, filterKey, sortKey]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setFilterKey(\"*\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Show Both\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setFilterKey(\"vege\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Show Veges\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setFilterKey(\"fruit\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Show Fruits\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSortKey(\"number\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Sort Number\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSortKey(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Sort Name\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    className: `filter-item ${title}`,\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }))))); // return (\n  //     <CollectionPageContainer>\n  //         <CollectionTitle>{title}</CollectionTitle>\n  //         <CollectionItemsContainer>\n  //             {items.map(item => (\n  //                 <CollectionItem \n  //                     key={item.id} \n  //                     item={item} \n  //                 />\n  //             ))}\n  //         </CollectionItemsContainer>\n  //     </CollectionPageContainer>\n  // );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/projects/portafolio/tienda-nona/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","useRef","useState","connect","Isotope","CollectionItem","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","Row","Col","CollectionPage","collection","console","log","title","items","isotope","setIsotope","filterKey","setFilterKey","sortKey","setSortKey","itemSelector","layoutMode","getSortData","number","name","arrange","filter","sortBy","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAoD,OAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAGA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SACIC,uBADJ,EAEIC,eAFJ,EAGIC,wBAHJ,EAKIC,GALJ,EAMIC,GANJ,QAOS,qBAPT;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACI,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBJ,UAAzB,CAFuC,CAGtC;;AACD,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBpB,KAAK,CAACG,QAAN,CAAe,IAAf,CAA9B,CAJuC,CAKvC;;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BtB,KAAK,CAACG,QAAN,CAAe,GAAf,CAAlC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBxB,KAAK,CAACG,QAAN,CAAe,QAAf,CAA9B,CAPuC,CASvC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBmB,IAAAA,UAAU,CACV,IAAIf,OAAJ,CAAY,mBAAZ,EAAiC;AAC7BoB,MAAAA,YAAY,EAAE,cADe;AAE7BC,MAAAA,UAAU,EAAE,SAFiB;AAG7BC,MAAAA,WAAW,EACV;AACCC,QAAAA,MAAM,EAAE,kBADT;AAECC,QAAAA,IAAI,EAAE;AAFP;AAJ4B,KAAjC,CADU,CAAV;AAWH,GAZD,EAYG,EAZH;AAcA7B,EAAAA,KAAK,CAACC,SAAN,CACI,MAAM;AACJ,QAAIkB,OAAJ,EAAa;AACXE,MAAAA,SAAS,KAAK,GAAd,GACIF,OAAO,CAACW,OAAR,CAAgB;AAAEC,QAAAA,MAAM,EAAG,GAAX;AAAgBC,QAAAA,MAAM,EAAET;AAAxB,OAAhB,CADJ,GAEEJ,OAAO,CAACW,OAAR,CAAgB;AAAEC,QAAAA,MAAM,EAAG,IAAGV,SAAU,EAAxB;AAA4BW,QAAAA,MAAM,EAAET;AAApC,OAAhB,CAFF;AAGD;AACF,GAPL,EAQI,CAACJ,OAAD,EAAUE,SAAV,EAAqBE,OAArB,CARJ;AAYE,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,GAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,MAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,IAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,eAIE;AAAI,IAAA,OAAO,EAAE,MAAME,UAAU,CAAC,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAI,IAAA,OAAO,EAAE,MAAMA,UAAU,CAAC,MAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACX,oBAAC,cAAD;AACI,IAAA,SAAS,EAAG,eAAcjB,KAAM,EADpC;AAEI,IAAA,GAAG,EAAEiB,IAAI,CAACC,EAFd;AAGI,IAAA,IAAI,EAAED,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADN,CATF,CADF,CApCqC,CA6DvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA1ED;;AA4EA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CxB,EAAAA,UAAU,EAAEP,gBAAgB,CAAC+B,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,eAAejC,OAAO,CAClBgC,eADkB,CAAP,CAEbvB,cAFa,CAAf","sourcesContent":["import React, { useEffect, useRef, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Isotope from 'isotope-layout'\r\n\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n    CollectionPageContainer,\r\n    CollectionTitle,\r\n    CollectionItemsContainer,\r\n\r\n    Row,\r\n    Col\r\n  } from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\nconsole.log(collection)\r\n    const { title, items } = collection;\r\n     // store the isotope object in one state\r\n    const [isotope, setIsotope] = React.useState(null);\r\n    // store the filter keyword in another state\r\n    const [filterKey, setFilterKey] = React.useState(\"*\");\r\n    const [sortKey, setSortKey] = React.useState(\"number\");\r\n\r\n    // initialize an Isotope object with configs\r\n    React.useEffect(() => {\r\n        setIsotope(\r\n        new Isotope(\".filter-container\", {\r\n            itemSelector: \".filter-item\",\r\n            layoutMode: \"fitRows\",\r\n            getSortData:\r\n\t            {\r\n\t            \tnumber: '.number parseInt',\r\n\t            \tname: '.name',\r\n\t            },\r\n        })\r\n        );\r\n    }, []);\r\n\r\n    React.useEffect(\r\n        () => {\r\n          if (isotope) {\r\n            filterKey === \"*\"\r\n              ? isotope.arrange({ filter: `*` , sortBy: sortKey})\r\n            : isotope.arrange({ filter: `.${filterKey}` , sortBy: sortKey});\r\n          }\r\n        },\r\n        [isotope, filterKey, sortKey]\r\n      );\r\n\r\n\r\n      return (\r\n        <>\r\n          <ul>\r\n            <li onClick={() => setFilterKey(\"*\")}>Show Both</li>\r\n            <li onClick={() => setFilterKey(\"vege\")}>Show Veges</li>\r\n            <li onClick={() => setFilterKey(\"fruit\")}>Show Fruits</li>\r\n            <li onClick={() => setSortKey(\"number\")}>Sort Number</li>\r\n            <li onClick={() => setSortKey(\"name\")}>Sort Name</li>\r\n          </ul>\r\n          <hr />\r\n          <Col>\r\n                <div>\r\n                    {items.map(item => (\r\n                        <CollectionItem \r\n                            className={`filter-item ${title}`}\r\n                            key={item.id} \r\n                            item={item} \r\n                        />\r\n                    ))}\r\n                </div>\r\n            </Col>\r\n        </>\r\n      \r\n    );\r\n\r\n    // return (\r\n    //     <CollectionPageContainer>\r\n    //         <CollectionTitle>{title}</CollectionTitle>\r\n    //         <CollectionItemsContainer>\r\n    //             {items.map(item => (\r\n    //                 <CollectionItem \r\n    //                     key={item.id} \r\n    //                     item={item} \r\n    //                 />\r\n    //             ))}\r\n    //         </CollectionItemsContainer>\r\n    //     </CollectionPageContainer>\r\n    // );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(CollectionPage);"]},"metadata":{},"sourceType":"module"}