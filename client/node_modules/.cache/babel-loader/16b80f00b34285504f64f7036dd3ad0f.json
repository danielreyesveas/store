{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\portafolio\\\\tienda-nona\\\\client\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Isotope from 'isotope-layout';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport Carousel from '../../components/carrousel/carrousel.component';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer, Row, Col, SortingBar, Results, SortingContainer, ItemSorting } from './collection.styles';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nconst [slideIn, setSlideIn] = useState(true);\nconst [slideDirection, setSlideDirection] = useState('down');\n\nconst onArrowClick = direction => {\n  const increment = direction === 'left' ? -1 : 1;\n  const newIndex = (index + increment + numSlides) % numSlides;\n  const oppDirection = direction === 'left' ? 'right' : 'left';\n  setSlideDirection(direction);\n  setSlideIn(false);\n  setTimeout(() => {\n    setIndex(newIndex);\n    setSlideDirection(oppDirection);\n    setSlideIn(true);\n  }, 500);\n};\n\nconst CollectionPage = ({\n  collection\n}) => {\n  console.log(collection);\n  const {\n    title,\n    items\n  } = collection;\n  const isoRef = useRef(); // store the isotope object in one state\n\n  const [isotope, setIsotope] = useState(null);\n  const [state, setState] = useState({\n    isotope: null\n  }); // store the filter keyword in another state\n\n  const [filterKey, setFilterKey] = useState(\"*\");\n  const [sortKey, setSortKey] = useState(\"price\");\n  const SLIDE_INFO = [{\n    backgroundColor: '#ff7c7c',\n    title: 'Slide 1'\n  }, {\n    backgroundColor: '#ffb6b9',\n    title: 'Slide 2'\n  }, {\n    backgroundColor: '#8deaff',\n    title: 'Slide 3'\n  }, {\n    backgroundColor: '#ffe084',\n    title: 'Slide 4'\n  }, {\n    backgroundColor: '#d9d9d9',\n    title: 'Slide 5'\n  }];\n  const [index, setIndex] = useState(0);\n  const content = SLIDE_INFO[index];\n  const numSlides = SLIDE_INFO.length;\n\n  const onArrowClick = direction => {\n    const increment = direction === 'left' ? -1 : 1;\n    const newIndex = (index + increment + numSlides) % numSlides;\n    setIndex(newIndex);\n  }; // initialize an Isotope object with configs\n\n\n  useEffect(() => {\n    setIsotope(new Isotope(isoRef.current, {\n      itemSelector: \".product\",\n      layoutMode: 'fitRows',\n      fitRows: {\n        gutter: 30\n      },\n      getSortData: {\n        price: '.price parseInt',\n        name: '.name'\n      }\n    }));\n  }, []);\n  useEffect(() => {\n    if (isotope) {\n      filterKey === \"*\" ? isotope.arrange({\n        filter: `*`,\n        sortBy: sortKey\n      }) : isotope.arrange({\n        filter: `.${filterKey}`,\n        sortBy: sortKey\n      });\n    }\n  }, [isotope, filterKey, sortKey]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CollectionPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Arrow, {\n    direction: \"left\",\n    clickFunction: () => onArrowClick('left'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel, {\n    content: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Arrow, {\n    direction: \"right\",\n    clickFunction: () => onArrowClick('right'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CollectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, title), /*#__PURE__*/React.createElement(SortingBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Results, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Showing \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 46\n    }\n  }, \"12\"), \" results\"), /*#__PURE__*/React.createElement(SortingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ItemSorting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }, \"Sort by\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-chevron-down\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSortKey(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 84\n    }\n  }, \"Nombre\")), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: () => setSortKey(\"price\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 85\n    }\n  }, \"Precio\"))))))), /*#__PURE__*/React.createElement(CollectionItemsContainer, {\n    className: \"product_grid\",\n    ref: isoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }))))))); // return (\n  //     <CollectionPageContainer>\n  //         <CollectionTitle>{title}</CollectionTitle>\n  //         <CollectionItemsContainer>\n  //             {items.map(item => (\n  //                 <CollectionItem \n  //                     key={item.id} \n  //                     item={item} \n  //                 />\n  //             ))}\n  //         </CollectionItemsContainer>\n  //     </CollectionPageContainer>\n  // );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/projects/portafolio/tienda-nona/client/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","useRef","useState","connect","Isotope","CollectionItem","selectCollection","Carousel","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","Row","Col","SortingBar","Results","SortingContainer","ItemSorting","FaChevronLeft","FaChevronRight","slideIn","setSlideIn","slideDirection","setSlideDirection","onArrowClick","direction","increment","newIndex","index","numSlides","oppDirection","setTimeout","setIndex","CollectionPage","collection","console","log","title","items","isoRef","isotope","setIsotope","state","setState","filterKey","setFilterKey","sortKey","setSortKey","SLIDE_INFO","backgroundColor","content","length","current","itemSelector","layoutMode","fitRows","gutter","getSortData","price","name","arrange","filter","sortBy","map","item","id","mapStateToProps","ownProps","match","params","collectionId"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Isotope from 'isotope-layout'\r\n\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\nimport Carousel from '../../components/carrousel/carrousel.component';\r\n\r\nimport {\r\n    CollectionPageContainer,\r\n    CollectionTitle,\r\n    CollectionItemsContainer,\r\n\r\n    Row,\r\n    Col,\r\n    SortingBar,\r\n    Results,\r\n    SortingContainer,\r\n    ItemSorting\r\n  } from './collection.styles';\r\n\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\n\r\nconst [slideIn, setSlideIn] = useState(true);\r\nconst [slideDirection, setSlideDirection] = useState('down');\r\n\r\nconst onArrowClick = (direction) => {\r\n    const increment = direction === 'left' ? -1 : 1;\r\n    const newIndex = (index + increment + numSlides) % numSlides;\r\n\r\n    const oppDirection = direction === 'left' ? 'right' : 'left';\r\n    setSlideDirection(direction);\r\n    setSlideIn(false);\r\n\r\n    setTimeout(() => {\r\n        setIndex(newIndex);\r\n        setSlideDirection(oppDirection);\r\n        setSlideIn(true);\r\n    }, 500);\r\n};\r\nconst CollectionPage = ({ collection }) => {\r\nconsole.log(collection)\r\n    const { title, items } = collection;\r\n    const isoRef = useRef()\r\n     // store the isotope object in one state\r\n    const [isotope, setIsotope] = useState(null);\r\n    const [state, setState] = useState({ isotope: null })\r\n    // store the filter keyword in another state\r\n    const [filterKey, setFilterKey] = useState(\"*\");\r\n    const [sortKey, setSortKey] = useState(\"price\");\r\n\r\n    const SLIDE_INFO = [\r\n        { backgroundColor: '#ff7c7c', title: 'Slide 1' },\r\n        { backgroundColor: '#ffb6b9', title: 'Slide 2' },\r\n        { backgroundColor: '#8deaff', title: 'Slide 3' },\r\n        { backgroundColor: '#ffe084', title: 'Slide 4' },\r\n        { backgroundColor: '#d9d9d9', title: 'Slide 5' },\r\n    ];\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const content = SLIDE_INFO[index];\r\n    const numSlides = SLIDE_INFO.length;\r\n\r\n    const onArrowClick = (direction) => {\r\n        const increment = direction === 'left' ? -1 : 1;\r\n        const newIndex = (index + increment + numSlides) % numSlides;\r\n        setIndex(newIndex);\r\n    };\r\n\r\n    // initialize an Isotope object with configs\r\n    useEffect(() => {\r\n        setIsotope(\r\n        new Isotope(isoRef.current, {\r\n            itemSelector: \".product\",\r\n            layoutMode: 'fitRows',\r\n\t\t\t\tfitRows:\r\n\t\t\t\t{\r\n\t\t\t\t\tgutter: 30\r\n\t\t\t\t},\r\n            getSortData:\r\n\t            {\r\n\t            \tprice: '.price parseInt',\r\n\t            \tname: '.name',\r\n\t            },\r\n        })\r\n        );\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n          if (isotope) {\r\n            filterKey === \"*\"\r\n              ? isotope.arrange({ filter: `*` , sortBy: sortKey})\r\n            : isotope.arrange({ filter: `.${filterKey}` , sortBy: sortKey});\r\n          }\r\n        },\r\n        [isotope, filterKey, sortKey]\r\n      );\r\n\r\n\r\n      return (\r\n        <>\r\n            {/* <ul>\r\n                <li onClick={() => setFilterKey(\"*\")}>Show Both</li>\r\n                <li onClick={() => setFilterKey(\"vege\")}>Show Veges</li>\r\n                <li onClick={() => setFilterKey(\"fruit\")}>Show Fruits</li>\r\n            </ul> */}\r\n\r\n            <CollectionPageContainer>\r\n                <Row>\r\n                    <Col>\t\t\t\r\n                        <Arrow\r\n                            direction='left'\r\n                            clickFunction={() => onArrowClick('left')}\r\n                        />\t\t\r\n                        <Carousel content={content} />\r\n                        <Arrow\r\n                            direction='right'\r\n                            clickFunction={() => onArrowClick('right')}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\t\t\t\t\t\r\n\r\n                        <CollectionTitle>{title}</CollectionTitle>\r\n\r\n                        <SortingBar>\r\n                            <Results>Showing <span>12</span> results</Results>\r\n                            <SortingContainer>\r\n                                <ItemSorting>\r\n                                    <li>\r\n                                        <span>Sort by</span>\r\n                                        <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\r\n                                        <ul>\r\n                                            <li onClick={() => setSortKey(\"name\")}><span>Nombre</span></li>\r\n                                            <li onClick={() => setSortKey(\"price\")}><span>Precio</span></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ItemSorting>\r\n                            </SortingContainer>\r\n                        </SortingBar>                        \r\n\r\n                        <CollectionItemsContainer className=\"product_grid\"  ref={isoRef}>\r\n                            {items.map(item => (\r\n                                <CollectionItem                         \r\n                                    key={item.id} \r\n                                    item={item} \r\n                                />\r\n                            ))}\r\n                        </CollectionItemsContainer>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </CollectionPageContainer>\r\n        </>\r\n      \r\n    );\r\n\r\n    // return (\r\n    //     <CollectionPageContainer>\r\n    //         <CollectionTitle>{title}</CollectionTitle>\r\n    //         <CollectionItemsContainer>\r\n    //             {items.map(item => (\r\n    //                 <CollectionItem \r\n    //                     key={item.id} \r\n    //                     item={item} \r\n    //                 />\r\n    //             ))}\r\n    //         </CollectionItemsContainer>\r\n    //     </CollectionPageContainer>\r\n    // );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(CollectionPage);"]},"metadata":{},"sourceType":"module"}