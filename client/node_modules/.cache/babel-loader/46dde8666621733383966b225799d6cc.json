{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsStartAsync } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {} // collectionRef\n  // .get()\n  // .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/projects/reactjs/store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsStartAsync","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,0BAAT,QAA2C,gBAA3C;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACG,+BAAD,EAAkCU,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACG,uBAAuB,CAACW,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc,CAEf,CAVoC,CAarC;AACA;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXO,eAAe,CAACY,uBADL,EAEXV,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\nimport { fetchCollectionsStartAsync } from './shop.actions';\r\n\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('Fired');\r\n    \r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n    // collectionRef\r\n    // .get()\r\n    // .then(snapshot => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    // }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START, \r\n        fetchCollectionsAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}